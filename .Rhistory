df.cowinfo$BirthDate <- as.character(df.cowinfo$BirthDate)
df.culldata <- read_excel(filename, sheet = "CullData")
df.calving <- read_excel(filename, sheet = "Calving")
df.insemination <- read_excel(filename, sheet = "Insemination")
df.pregnancy <- read_excel(filename, sheet = "Pregnancy")
# merge the data of different sheets within the same farm
df.farm <- merge(df.cowinfo, df.calving, by = "CowId", all.x=TRUE, all.y=TRUE) %>%
merge(df.culldata, by = "CowId", all.x = TRUE, all.y=TRUE) %>%
merge(df.insemination, by = "CowId", all.x=TRUE, all.y=TRUE) %>%
merge(df.pregnancy, by = "CowId", all.x=TRUE, all.y=TRUE)
# append all the merged data into the master final data table
all_farm_raw <- bind_rows(all_farm_raw, df.farm)
}
library(readxl)
library(tidyr)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(reader)
library(lubridate)
#########################
#   Merge Reproduction  #
#########################
# Merge reproduction data from 38 farms
# empty the data frame first
all_farm_raw <- data.frame()
for (i in 1001:1038) {
# create the excel file name base on the input i
filename <- paste("C:/Users/user/good-enough-project-template/data/", i ,", All Data, Proc, June 2020.xlsx", sep = "")
# load the sheets within the same excel file (the same farm)
df.calving <- read_excel(filename, sheet = "Calving")
df.cowinfo <- read_excel(filename, sheet = "CowInfo")
# change the column name of cowinfo (CowID -> CowId)
colnames(df.cowinfo)[colnames(df.cowinfo)=="CowID"] <- "CowId"
# change the column BirthDate into character
df.cowinfo$BirthDate <- as.character(df.cowinfo$BirthDate)
df.culldata <- read_excel(filename, sheet = "CullData")
df.calving <- read_excel(filename, sheet = "Calving")
df.insemination <- read_excel(filename, sheet = "Insemination")
df.pregnancy <- read_excel(filename, sheet = "Pregnancy")
# merge the data of different sheets within the same farm
df.farm <- merge(df.cowinfo, df.calving, by = "CowId", all.x=TRUE, all.y=TRUE) %>%
merge(df.culldata, by = "CowId", all.x = TRUE, all.y=TRUE) %>%
merge(df.insemination, by = "CowId", all.x=TRUE, all.y=TRUE) %>%
merge(df.pregnancy, by = "CowId", all.x=TRUE, all.y=TRUE)
# append all the merged data into the master final data table
all_farm_raw <- bind_rows(all_farm_raw, df.farm)
}
#########################
#   Merge Reproduction  #
#########################
# Merge reproduction data from 38 farms
# empty the data frame first
all_farm_raw <- data.frame()
for (i in 1001:1038) {
# create the excel file name base on the input i
filename <- paste("C:/Users/user/good-enough-project-template/data/raw/", i ,", All Data, Proc, June 2020.xlsx", sep = "")
# load the sheets within the same excel file (the same farm)
df.calving <- read_excel(filename, sheet = "Calving")
df.cowinfo <- read_excel(filename, sheet = "CowInfo")
# change the column name of cowinfo (CowID -> CowId)
colnames(df.cowinfo)[colnames(df.cowinfo)=="CowID"] <- "CowId"
# change the column BirthDate into character
df.cowinfo$BirthDate <- as.character(df.cowinfo$BirthDate)
df.culldata <- read_excel(filename, sheet = "CullData")
df.calving <- read_excel(filename, sheet = "Calving")
df.insemination <- read_excel(filename, sheet = "Insemination")
df.pregnancy <- read_excel(filename, sheet = "Pregnancy")
# merge the data of different sheets within the same farm
df.farm <- merge(df.cowinfo, df.calving, by = "CowId", all.x=TRUE, all.y=TRUE) %>%
merge(df.culldata, by = "CowId", all.x = TRUE, all.y=TRUE) %>%
merge(df.insemination, by = "CowId", all.x=TRUE, all.y=TRUE) %>%
merge(df.pregnancy, by = "CowId", all.x=TRUE, all.y=TRUE)
# append all the merged data into the master final data table
all_farm_raw <- bind_rows(all_farm_raw, df.farm)
}
rm(list=ls(pattern="df"))
summary(all_farm_raw)
# Delete all the rows that without calving date
all_farm <- subset(all_farm_raw, !is.na(all_farm_raw$CalvingDate))
df.cow <- all_farm %>%
distinct(FarmNo, CowId)
rm(all_farm_raw)
nrow(all_farm)
str(all_farm)
summary(all_farm)
all_farm$BirthDate <- as.Date(all_farm$BirthDate)
# change weird date signs to NAs #
all_farm$EEDDate <- as.Date(all_farm$NextIns)
all_farm$EEDDate[all_farm$EEDDate == "1899-12-31"] <- NA
all_farm$NextIns <- as.Date(all_farm$NextIns)
all_farm$NextIns[all_farm$NextIns == "1899-12-31 00:00:00"] <- NA
all_farm$PregDate.x <- as.Date(all_farm$PregDate.x)
all_farm$PregDate.x[all_farm$PregDate.x == "1899-12-31 00:00:00"] <- NA
all_farm$AbortionDate <- as.Date(all_farm$AbortionDate)
all_farm$AbortionDate[all_farm$AbortionDate == "1899-12-31 00:00:00"] <- NA
summary(all_farm)
summary(all_farm$CohortExitDate)
summary(all_farm$CohortExitDate)
#########################
#   Merge Reproduction  #
#########################
# Merge reproduction data from 38 farms
# empty the data frame first
all_farm_raw <- data.frame()
for (i in 1001:1038) {
# create the excel file name base on the input i
filename <- paste("C:/Users/user/good-enough-project-template/data/raw/", i ,", All Data, Proc, June 2020.xlsx", sep = "")
# load the sheets within the same excel file (the same farm)
df.calving <- read_excel(filename, sheet = "Calving")
df.cowinfo <- read_excel(filename, sheet = "CowInfo")
# change the column name of cowinfo (CowID -> CowId)
colnames(df.cowinfo)[colnames(df.cowinfo)=="CowID"] <- "CowId"
# change the column BirthDate into character
df.cowinfo$BirthDate <- as.character(df.cowinfo$BirthDate)
df.culldata <- read_excel(filename, sheet = "CullData")
df.calving <- read_excel(filename, sheet = "Calving")
df.insemination <- read_excel(filename, sheet = "Insemination")
df.pregnancy <- read_excel(filename, sheet = "Pregnancy")
# merge the data of different sheets within the same farm
df.farm <- merge(df.cowinfo, df.calving, by = "CowId", all.x=TRUE, all.y=TRUE) %>%
merge(df.culldata, by = "CowId", all.x = TRUE, all.y=TRUE) %>%
merge(df.insemination, by = "CowId", all.x=TRUE, all.y=TRUE) %>%
merge(df.pregnancy, by = "CowId", all.x=TRUE, all.y=TRUE)
# append all the merged data into the master final data table
all_farm_raw <- bind_rows(all_farm_raw, df.farm)
}
rm(list=ls(pattern="df"))
summary(all_farm_raw)
# Delete all the rows that without calving date
all_farm <- subset(all_farm_raw, !is.na(all_farm_raw$CalvingDate))
df.cow <- all_farm %>%
distinct(FarmNo, CowId)
rm(all_farm_raw)
nrow(all_farm)
str(all_farm)
summary(all_farm)
all_farm$BirthDate <- as.Date(all_farm$BirthDate)
# change weird date signs to NAs #
all_farm$EEDDate <- as.Date(all_farm$NextIns)
all_farm$EEDDate[all_farm$EEDDate == "1899-12-31"] <- NA
all_farm$NextIns <- as.Date(all_farm$NextIns)
all_farm$NextIns[all_farm$NextIns == "1899-12-31 00:00:00"] <- NA
all_farm$PregDate.x <- as.Date(all_farm$PregDate.x)
all_farm$PregDate.x[all_farm$PregDate.x == "1899-12-31 00:00:00"] <- NA
all_farm$AbortionDate <- as.Date(all_farm$AbortionDate)
all_farm$AbortionDate[all_farm$AbortionDate == "1899-12-31 00:00:00"] <- NA
summary(all_farm)
# select the reproduction parameters that are going to use
work <- all_farm%>%
select(FarmNo, CowId, BirthDate, CalvingDate, Lactation, DFC_CLA, DFCFirstHeat, DaysToFirstIns, DaysToLastIns, DaysBtwFirstAndLastIns, InsDate, InsNumber, PregDate.x, PregDate.y, AbortionDate, DaysToAbort) %>%
distinct(FarmNo, CowId, Lactation, InsNumber, PregDate.x, .keep_all=TRUE)
df.work.ind <- work %>%
distinct(FarmNo, CowId, .keep_all = TRUE)
df.work.lact <- work %>%
distinct(FarmNo, CowId, Lactation, .keep_all=TRUE)
# list the first insemination, one cow in each row
df.ins1 <- all_farm %>%
group_by(FarmNo, CowId, Lactation) %>%
summarize(Ins_1=min(InsNumber), PregDate_1=min(PregDate.x), InsDate_1=min(InsDate), AbortionDate_1=min(AbortionDate))
View(df.ins1)
# when was the last AI?
df.insN <- all_farm %>%
group_by(FarmNo, CowId, Lactation) %>%
summarize(Ins_N=max(InsNumber), PregDate_N=max(PregDate.x), InsDate_N=max(InsDate), AbortionDate_N=max(AbortionDate))
View(df.insN)
View(df.insN)
# When Ins_N is 1, meaning the cow was inseminated only once.
df.insN$Ins_N[df.insN$Ins_N == 1] <- NA
# Change the last Pregnant Date into character and others NA
df.insN$PregDate_N <- ifelse(is.na(df.insN$Ins_N), NA, as.character(df.insN$PregDate_N))
df.insN$InsDate_N <- ifelse(is.na(df.insN$Ins_N), NA, as.character(df.insN$InsDate_N))
df.insN$AbortionDate_N <- as.Date(df.insN$AbortionDate_N)
View(df.insN)
which.max(df.insN$Gap)
# Check data consistency
## Whether the time differences between Abortion date and insemination date are positive?
df.insN$PregDate_N <- as.Date(df.insN$PregDate_N)
df.insN$InsDate_N <- as.Date(df.insN$InsDate_N)
df.insN$Gap <- difftime(df.insN$AbortionDate_N, df.insN$InsDate_N, units="days")
df.insN$Gap <- as.numeric(df.insN$Gap)
summary(df.insN$Gap)
df.insN$Gap[which(df.insN$Gap > 0)]
# Delete the column, Gap
df.insN$Gap <- NULL
## What is the time differences between 1st Abortion and Preg and 1st AI?
df.ins1$InsDate_1 <- as.Date(df.ins1$InsDate_1)
df.ins1$PregDate_1 <- as.Date(df.ins1$PregDate_1)
df.ins1$AbortionDate_1 <- as.Date(df.ins1$AbortionDate_1)
df.ins1$Gap <- difftime(df.ins1$AbortionDate_1, df.ins1$InsDate_1, units="days")
df.ins1$Gap <- as.numeric(df.ins1$Gap)
summary(df.ins1$Gap)
df.ins1$Gap <- NULL
df.ins.all <- data.frame()
df.ins.all <- merge(df.ins1, df.insN, by = c('FarmNo', 'CowId', 'Lactation'), all.y=TRUE, sort=F)
View(df.ins.all)
# Merge reproduction events to get all reproductive events
df.work_repro <- data.frame()
df.work_repro <- merge(work, df.ins.all,
by = c('FarmNo', 'CowId', 'Lactation'),
all.y = TRUE, sort=F) %>%
distinct(FarmNo, CowId, Lactation, .keep_all=TRUE)
# Delete columns
df.work_repro$PregDate.x <- NULL
df.work_repro$PregDate.y <- NULL
df.work_repro$InsDate <- NULL
df.work_repro$InsNumber <- NULL
repro <- df.work_repro
rm(list=ls(pattern="df"))
###########################################
# select reproduction events of interests #
###########################################
df.preg <- all_farm %>%
select(FarmNo, CowId,
BirthDate, CalvingDate,
Lactation,
CullDate,
InsDate, InsNumber, NextIns,
PregDate.x, PregDate.y, DeterminationType,
AbortionDate, DaysToAbort)
summary(df.preg)
# Remove rows with FarmNo = NA
df.preg1 <- df.preg[!is.na(df.preg$FarmNo), ]
summary(df.preg1)
# Number of cows
df.cow <- df.preg1 %>%
distinct(FarmNo, CowId)
#######################
#  Check consistency  #
#######################
# Time between Calving, Preg, Culling
df.preg1$CalvingDate <- as.Date(df.preg1$CalvingDate)
df.preg1$PregDate.y <- as.Date(df.preg1$PregDate.y)
df.preg1$CullDate <- as.Date(df.preg1$CullDate)
# Culling date before 2018-06-01 is outside the cohort time
df.preg1$CullDate[df.preg1$CullDate <= "2018-05-31"] <- NA
# Time between (Preg and Calving Date) and (Culling and Calving Date)
df.preg1$preg.calving <- difftime(df.preg1$PregDate.y,
df.preg1$CalvingDate, units="days")
df.preg1$cull.calving <- difftime(df.preg1$CullDate,
df.preg1$CalvingDate, units="days")
df.preg1$Culled <- ifelse(!is.na(df.preg1$cull.calving), 1, 0)
summary(df.preg1)
# Exclude rows that have been culled within 150 DIM
df.preg1 <- df.preg1[-which(df.preg1$cull.calving < 150), ]
# number of cows
df.cow <- df.preg1 %>%
distinct(FarmNo, CowId)
# Remove column PregDate.x
df.preg1$PregDate.x <- NULL
# number of cows
df.cow <- df.preg1 %>%
distinct(FarmNo, CowId)
###########################################
# select reproduction events of interests #
###########################################
df.preg <- all_farm %>%
select(FarmNo, CowId,
BirthDate, CalvingDate,
Lactation,
CullDate,
InsDate, InsNumber, NextIns,
PregDate.x, PregDate.y, DeterminationType,
AbortionDate, DaysToAbort)
summary(df.preg)
# Select the pregnancy determined by HN system (DeterminationType = 2)
df.preg1 <- df.preg[(df.preg$DeterminationType == 2 | is.na(df.preg$DeterminationType)), ]
summary(df.preg1)
# Select the pregnancy determined by HN system, Physical, and Visual abort (DeterminationType = 2, 3, and 4)
df.preg2 <- df.preg[(df.preg$DeterminationType == 2 | df.preg$DeterminationType == 3 | df.preg$DeterminationType == 4), ]
#Find out that Determination Type 4 is confusing
#Remove rows with FarmNo = NA
df.preg3 <- df.preg1[!is.na(df.preg1$FarmNo), ]
summary(df.preg3)
df.preg1 <- df.preg3
rm(df.preg3)
rm(df.preg2)
summary(df.preg1)
#Remove column PregDate.x
df.preg1$PregDate.x <- NULL
summary(df.preg1)
#######################
#  Check consistency  #
#######################
# Time between Calving, Preg, Culling
df.preg1$CalvingDate <- as.Date(df.preg1$CalvingDate)
df.preg1$PregDate.y <- as.Date(df.preg1$PregDate.y)
df.preg1$CullDate <- as.Date(df.preg1$CullDate)
# Culling date before 2018-06-01 is outside the cohort time
df.preg1$CullDate[df.preg1$CullDate <= "2018-05-31"] <- NA
# Time between (Preg and Calving Date) and (Culling and Calving Date)
df.preg1$preg.calving <- difftime(df.preg1$PregDate.y,
df.preg1$CalvingDate, units="days")
df.preg1$cull.calving <- difftime(df.preg1$CullDate,
df.preg1$CalvingDate, units="days")
df.preg1$Culled <- ifelse(!is.na(df.preg1$cull.calving), 1, 0)
summary(df.preg1)
# Exclude rows that have been culled within 150 DIM
df.preg1 <- df.preg1[-which(df.preg1$cull.calving < 150), ]
# number of cows
df.cow <- df.preg1 %>%
distinct(FarmNo, CowId)
# Remove column PregDate.x
df.preg1$PregDate.x <- NULL
###########################################
# select reproduction events of interests #
###########################################
df.preg <- all_farm %>%
select(FarmNo, CowId,
BirthDate, CalvingDate,
Lactation,
CullDate,
InsDate, InsNumber, NextIns,
PregDate.x, PregDate.y, DeterminationType,
AbortionDate, DaysToAbort)
summary(df.preg)
# Select the pregnancy determined by HN system (DeterminationType = 2)
df.preg1 <- df.preg[(df.preg$DeterminationType == 2 | is.na(df.preg$DeterminationType)), ]
summary(df.preg1)
# Select the pregnancy determined by HN system, Physical, and Visual abort (DeterminationType = 2, 3, and 4)
df.preg2 <- df.preg[(df.preg$DeterminationType == 2 | df.preg$DeterminationType == 3 | df.preg$DeterminationType == 4), ]
#Find out that Determination Type 4 is confusing
#Remove rows with FarmNo = NA
df.preg3 <- df.preg1[!is.na(df.preg1$FarmNo), ]
#Find out that Determination Type 4 is confusing
#Remove rows with FarmNo = NA
df.preg3 <- df.preg1[!is.na(df.preg1$FarmNo), ]
df.preg1 <- df.preg3
rm(df.preg3)
rm(df.preg2)
#Remove column PregDate.x
df.preg1$PregDate.x <- NULL
summary(df.preg1)
#######################
#  Check consistency  #
#######################
# Time between Calving, Preg, Culling
df.preg1$CalvingDate <- as.Date(df.preg1$CalvingDate)
df.preg1$PregDate.y <- as.Date(df.preg1$PregDate.y)
df.preg1$CullDate <- as.Date(df.preg1$CullDate)
# Culling date before 2018-06-01 is outside the cohort time
df.preg1$CullDate[df.preg1$CullDate <= "2018-05-31"] <- NA
# Culling date before 2018-06-01 is outside the cohort time
df.preg1$CullDate[df.preg1$CullDate <= "2018-05-31"] <- NA
# Time between (Preg and Calving Date) and (Culling and Calving Date)
df.preg1$preg.calving <- difftime(df.preg1$PregDate.y,
df.preg1$CalvingDate, units="days")
df.preg1$cull.calving <- difftime(df.preg1$CullDate,
df.preg1$CalvingDate, units="days")
df.preg1$Culled <- ifelse(!is.na(df.preg1$cull.calving), 1, 0)
summary(df.preg1)
# Exclude rows that have been culled within 150 DIM
df.preg1 <- df.preg1[-which(df.preg1$cull.calving < 150), ]
View(df.preg1)
###########################################
# select reproduction events of interests #
###########################################
df.preg <- all_farm %>%
select(FarmNo, CowId,
BirthDate, CalvingDate,
Lactation,
CullDate,
InsDate, InsNumber, NextIns,
PregDate.x, PregDate.y, DeterminationType,
AbortionDate, DaysToAbort)
###########################################
# select reproduction events of interests #
###########################################
df.preg <- all_farm %>%
select(FarmNo, CowId,
BirthDate, CalvingDate,
Lactation,
CullDate,
InsDate, InsNumber, NextIns,
PregDate.x, PregDate.y, DeterminationType,
AbortionDate, DaysToAbort)
summary(df.preg)
# Select the pregnancy determined by HN system (DeterminationType = 2)
df.preg1 <- df.preg[(df.preg$DeterminationType == 2 | is.na(df.preg$DeterminationType)), ]
summary(df.preg1)
# Select the pregnancy determined by HN system, Physical, and Visual abort (DeterminationType = 2, 3, and 4)
df.preg2 <- df.preg[(df.preg$DeterminationType == 2 | df.preg$DeterminationType == 3 | df.preg$DeterminationType == 4), ]
#Find out that Determination Type 4 is confusing
#Remove rows with FarmNo = NA
df.preg3 <- df.preg1[!is.na(df.preg1$FarmNo), ]
summary(df.preg3)
df.preg1 <- df.preg3
rm(df.preg3)
rm(df.preg2)
#Remove column PregDate.x
df.preg1$PregDate.x <- NULL
View(df.preg1)
# Exclude rows that have been culled within 150 DIM
df.preg1 <- df.preg1[-which(df.preg1$cull.calving < 150), ]
###########################################
# select reproduction events of interests #
###########################################
df.preg <- all_farm %>%
select(FarmNo, CowId,
BirthDate, CalvingDate,
Lactation,
CullDate,
InsDate, InsNumber, NextIns,
PregDate.x, PregDate.y, DeterminationType,
AbortionDate, DaysToAbort)
summary(df.preg)
# Select the pregnancy determined by HN system (DeterminationType = 2)
df.preg1 <- df.preg[(df.preg$DeterminationType == 2 | is.na(df.preg$DeterminationType)), ]
summary(df.preg1)
# Select the pregnancy determined by HN system, Physical, and Visual abort (DeterminationType = 2, 3, and 4)
df.preg2 <- df.preg[(df.preg$DeterminationType == 2 | df.preg$DeterminationType == 3 | df.preg$DeterminationType == 4), ]
#Find out that Determination Type 4 is confusing
#Remove rows with FarmNo = NA
df.preg3 <- df.preg1[!is.na(df.preg1$FarmNo), ]
summary(df.preg3)
df.preg1 <- df.preg3
rm(df.preg3)
rm(df.preg2)
#Remove column PregDate.x
df.preg1$PregDate.x <- NULL
summary(df.preg1)
#######################
#       TODO          #
#  Check consistency  #
#######################
# Time between Calving, Preg, Culling
df.preg1$CalvingDate <- as.Date(df.preg1$CalvingDate)
df.preg1$PregDate.y <- as.Date(df.preg1$PregDate.y)
df.preg1$CullDate <- as.Date(df.preg1$CullDate)
# Culling date before 2018-06-01 is outside the cohort time
df.preg1$CullDate[df.preg1$CullDate <= "2018-05-31"] <- NA
# Time between (Preg and Calving Date) and (Culling and Calving Date)
df.preg1$preg.calving <- difftime(df.preg1$PregDate.y,
df.preg1$CalvingDate, units="days")
df.preg1$cull.calving <- difftime(df.preg1$CullDate,
df.preg1$CalvingDate, units="days")
df.preg1$Culled <- ifelse(!is.na(df.preg1$cull.calving), 1, 0)
summary(df.preg1)
View(df.preg1)
# Exclude rows that have been culled within 150 DIM
df.preg1 <- df.preg1[-which(df.preg1$cull.calving < 150), ]
# number of cows
df.cow <- df.preg1 %>%
distinct(FarmNo, CowId)
# Remove column PregDate.x
df.preg1$PregDate.x <- NULL
View(df.preg1)
df.preg1$InsDate <- as.Date(df.preg1$InsDate)
df.preg1$preg.ins <- difftime(df.preg1$PregDate.y, df.preg1$InsDate, units="days")
df.preg1$preg.ins <- as.numeric(df.preg1$preg.ins)
###################################
# Check (AbortionDate - PregDate) #
###################################
df.preg1$AbortionDate <- as.Date(df.preg1$AbortionDate)
df.preg1$abort.preg <- difftime(df.preg1$AbortionDate, df.preg1$PregDate.y, units = "days")
df.preg1$abort.preg <- as.numeric(df.preg1$abort.preg)
str(df.preg1$DaysToAbort)
#exclude rows with negative DaysToAbort
df.preg1 <- df.preg1[(df.preg1$DaysToAbort >=0 | is.na(df.preg1$DaysToAbort)), ]
########################################################
# list the first insemination, one cow in only one row #
########################################################
df.ins1 <- df.preg1 %>%
group_by(FarmNo, CowId, Lactation, CalvingDate) %>%
summarize(InsNumber_1 = min(InsNumber),
PregDate_1 = min(PregDate.y),
InsDate_1=min(InsDate),
AbortionDate_1 = min(AbortionDate))
#number of cows in Number of AI
df.insN$InsNumber_N <- as.factor(df.insN$InsNumber_N)
ggplot(data=df.insN, aes(x=factor(InsNumber_N))) +
geom_bar(stat="count", fill="lightblue") +
stat_count(geom="text", size=3, aes(label=..count..)) +
ggtitle("Number of Cows and Number of AI") +
xlab("Number of AI")
# last AI, one cow in only one row
df.insN <- df.preg1 %>%
group_by(FarmNo, CowId, Lactation, CalvingDate) %>%
summarize(InsNumber_N = max(InsNumber),
PregDate_N = max(PregDate.y),
InsDate_N = max(InsDate),
AbortionDate_N = max(AbortionDate))
summary(df.insN)
table(df.insN$InsNumber_N) #How many times does a cow be inseminated?
summary(df.insN)
table(df.insN$InsNumber_N) #How many times does a cow be inseminated?
#number of cows in Number of AI
df.insN$InsNumber_N <- as.factor(df.insN$InsNumber_N)
ggplot(data=df.insN, aes(x=factor(InsNumber_N))) +
geom_bar(stat="count", fill="lightblue") +
stat_count(geom="text", size=3, aes(label=..count..)) +
ggtitle("Number of Cows and Number of AI") +
xlab("Number of AI")
ggplot(data=df.insN, aes(x=factor(InsNumber_N))) +
geom_bar(stat="count", fill="lightblue") +
stat_count(geom="text", size=3, aes(label=..count..)) +
ggtitle("Number of Cows and Number of AI") +
xlab("Number of AI") +
theme_classic()
table(df.ins1$InsNumber_1)
View(df.ins1)
View(df.insN)
df.data <- merge(df.ins1, df.insN,
by=c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'),
all.y=TRUE, sort=F)
View(df.data)
install.packages("roxygen2")
library(roxygen2)
roxygen2::roxygenise()
library(roxygen2)
roxygen2::roxygenise()
install.packages("docstring")
