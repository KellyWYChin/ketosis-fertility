units = "days")
# Time difference between (AbortionDate - InsDate)
df.preg1$abort.calving <- difftime(df.preg1$AbortionDate,
df.preg1$CalvingDate,
units = "days")
# exclude rows with negative DaysToAbort -> Don't do so!
#df.preg1 <- df.preg1[(df.preg1$DaysToAbort >=0 | is.na(df.preg1$DaysToAbort)), ]
# Time difference between (PregDate - InsDate)
df.preg1$preg.ins <- difftime(df.preg1$PregDate.y,
df.preg1$InsDate, units="days")
# If InsDate is behind PregDate (detected by HN system), the cow was not pregnent after the insemination
df.preg1$Preg_Status <- ifelse(df.preg1$preg.ins <=0, "0", "1")
df.test <- df.preg1 %>%
filter(is.na(Preg_Status))#there are 848 unknow preg. status
df.test <- df.preg1 %>%
distinct(farmno)
df.test <- df.preg1 %>%
distinct(FarmNo, CowId, Lactation)
df.test <- df.preg1 %>%
distinct(FarmNo, CowId, Lactation, cull.calving)
#############
#   Merge   #
#############
reproduction <- data.frame()
reproduction <- merge(repro, df.preg1,
by = c('FarmNo', 'CowId', 'Lactation',
'CalvingDate', 'BirthDate',
'AbortionDate', 'DaysToAbort'),
all.x = TRUE, sort=F) %>%
distinct(FarmNo, CowId, Lactation, CalvingDate, .keep_all=TRUE)
summary(reproduction) # 5129 obs of 33 variables
rm(list = ls(pattern="df"))
rm(repro, work)
##################
# Calving Season #
##################
CalvingSeason <- function(DATES){
WS <- as.Date("2012-1-1", format="%Y-%m-%d")
SE <- as.Date("2012-4-1", format="%Y-%m-%d")
SS <- as.Date("2012-7-1", format="%Y-%m-%d")
FE <- as.Date("2012-10-1", format="%Y-%m-%d")
d <- as.Date(strftime(DATES, format="2012-%m-%d"))
ifelse(d >= WS & d < SE, "Winter",
ifelse(d >= SE & d < SS, "Spring",
ifelse(d >= SS & d < FE, "Summer", "Fall")))
}
reproduction <- reproduction %>%
add_column(CalvingSeason =
CalvingSeason(reproduction$CalvingDate),
.after="CalvingDate") # 5129 obs of 33 variables
View(milk_all)
View(milk)
View(milk_all)
View(milk)
View(ketosis)
View(reproduction)
#######################################
#  Merge ketosis, reproduction, milk  #
#######################################
df.repro_keto <- merge(reproduction, ketosis,
by = c('FarmNo', 'CowId', 'Lactation' ),
all.x = TRUE, all.y = TRUE, sort = F)
View(df.repro_keto)
View(milk)
#5230 obs of 50 variables
df.repro_keto_milk <- merge(df.repro_keto, milk,
by = c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'), all.x = TRUE, all.y = TRUE, sort = F)
View(df.repro_keto_milk)
summary(df.repro_keto_milk)
# Exclude cows without Calving Date
milk <- subset(milk, !is.na(milk$CalvingDate))
#5230 obs of 50 variables
df.repro_keto_milk <- merge(df.repro_keto, milk,
by = c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'), all.x = TRUE, sort = F)
View(df.repro_keto_milk)
#5230 obs of 50 variables
df.repro_keto$CalvingDate <- as.Date(df.repro_keto$CalvingDate)
df.repro_keto_milk <- merge(df.repro_keto, milk,
by = c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'), all.x = TRUE, all.y = TRUE, sort = F)
summary(df.repro_keto_milk)
# Exculde cows without CalvingDate
df.repro_keto_milk <- df.repro_keto_milk[!is.na(df.repro_keto_milk$CalvingDate), ]
#######################################
#  Merge ketosis, reproduction, milk  #
#######################################
df.two <- merge(reproduction, ketosis,
by = c('FarmNo', 'CowId', 'Lactation'),
all.x = TRUE, all.y = TRUE, sort = F)
#5230 obs of 50 variables
df.two$CalvingDate <- as.Date(df.two$CalvingDate)
df.three <- merge(df.two, milk, by = c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'), all.x = TRUE, all.y = TRUE, sort = F)
rm(list=ls(pattern="df"))
#######################################
#  Merge ketosis, reproduction, milk  #
#######################################
df.two <- merge(reproduction, ketosis,
by = c('FarmNo', 'CowId', 'Lactation'),
all.x = TRUE, all.y = TRUE, sort = F)
#5230 obs of 50 variables
df.two$CalvingDate <- as.Date(df.two$CalvingDate)
df.three <- merge(df.two, milk, by = c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'), all.x = TRUE, all.y = TRUE, sort = F)
summary(df.three)
# Exculde cows without CalvingDate
df.three <- df.three[!is.na(df.three$CalvingDate), ] #5186 obs
# Exclude rows that have been culled within 150 DIM
df.three <- df.three[-which(df.three$cull.calving < 150), ] #ddf.three has 22987 obs of 15 variables
df.three <- merge(df.two, milk, by = c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'), all.x = TRUE, all.y = TRUE, sort = F)
# Exculde cows without CalvingDate
df.three <- df.three[!is.na(df.three$CalvingDate), ] #5186 obs
# Exclude rows that have been culled within 150 DIM
df.three <- df.three[-which(df.three$cull.calving < 150), ] #4926 obs
View(df.three)
summary(df.three)
# Exclude cows without DFC_CLA
df.three <- df.three[!is.na(df.three$DFC_CLA), ]
# Exclude cows with DFC_CLA less than 20 and more than 200
df.three <- df.three[-which(df.three$DFC_CLA < 20 | df.three$DFC_CLA > 200), ]
# Exclude cows DaysToFirstIns <20 DIM and >250 DIM
df.three <- df.three[-which(df.three$DaysToFirstIns < 20 | df.three$DaysToFirstIns >250), ]
### Exclude cows DFCFirstHeat <20 DIM and >200 DIM
df.three <- df.three[-which(df.three$DFCFirstHeat < 20 | df.three$DFCFirstHeat > 200), ]
summary(df.three)
View(ketosis)
View(all_milk_raw)
#################
#  Descriptive  #
#################
# How many duplicated cows?
df.three$farmcow <- paste(df.three$FarmNo, df.three$CowId, sep="")
df.three <- df.three %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow, fromLast=TRUE), 1, 0))
View(df.three)
df.three_onelactation <- df.three[(df.three$farmcow.dup == 0), ]
# How many times does a cow be inseminated?
table(df.three$Last_AI) #How many times does a cow be inseminated?
View(df.two)
#5230 obs of 50 variables
df.two$CalvingDate <- as.Date(df.two$CalvingDate)
# Check if reproduction data and ketosis are in the same parity
df.two$farmcow <- paste(df.two$FarmNo, df.two$CowId, sep="")
df.two <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow, fromLast=TRUE), 1, 0))
df.two <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1)
#######################################
#  Merge ketosis, reproduction, milk  #
#######################################
df.two <- merge(reproduction, ketosis,
by = c('FarmNo', 'CowId', 'Lactation'),
all.x = TRUE, all.y = TRUE, sort = F)
#5230 obs of 50 variables
df.two$CalvingDate <- as.Date(df.two$CalvingDate)
# Check if reproduction data and ketosis are in the same parity
df.two$farmcow <- paste(df.two$FarmNo, df.two$CowId, sep="")
df.two_duplicateparity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) #209 obs of 52 variables
View(df.two_duplicateparity)
#5230 obs of 50 variables
summary(df.two)
df.two_duplicateparity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) %>% #209 obs of 52 variables
distinct(FarmNo, CowId, Lactation, .keep_all=TURE)
df.two_duplicateparity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) %>% #209 obs of 52 variables
distinct(FarmNo, CowId, Lactation, .keep_all=T)
#######################################
#  Merge ketosis, reproduction, milk  #
#######################################
df.two <- merge(reproduction, ketosis,
by = c('FarmNo', 'CowId', 'Lactation'),
all.x = TRUE, all.y = TRUE, sort = F) %>%
#5230 obs of 50 variables
distinct(FarmNo, CowId, Lactation, .keep_all = T)
df.two$CalvingDate <- as.Date(df.two$CalvingDate)
# Check if reproduction data and ketosis are in the same parity
df.two$farmcow <- paste(df.two$FarmNo, df.two$CowId, sep="")
df.two_duplicateparity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) %>% #209 obs of 52 variables
distinct(FarmNo, CowId, Lactation, .keep_all=T) #152 obs of 52v
df.two_duplicateparity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) #%>% #209 obs of 52 variables
df.two_duplicateparity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) #%>% #209 obs of 52 variables
#######################################
#  Merge ketosis, reproduction, milk  #
#######################################
df.two <- merge(reproduction, ketosis,
by = c('FarmNo', 'CowId', 'Lactation'),
all.x = TRUE, all.y = TRUE, sort = F) %>%
#5230 obs of 50 variables
distinct(FarmNo, CowId, Lactation, CalvingDate, .keep_all = T) #5173 obs
summary(df.two)
summary(df.two)
df.two$CalvingDate <- as.Date(df.two$CalvingDate)
# Check if reproduction data and ketosis are in the same parity
df.two$farmcow <- paste(df.two$FarmNo, df.two$CowId, sep="")
df.two_duplicateparity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) #120 obs of 52 variables
View(df.two_duplicateparity)
df.three <- merge(df.two, milk, by = c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'), all.x = TRUE, all.y = TRUE, sort = F) #5230 obs of 63 variables
#################
#  Descriptive  #
#################
# How many duplicated cows?
length(df.two_duplicateparity)
#################
#  Descriptive  #
#################
# How many duplicated cows?
width(df.two_duplicateparity)
#################
#  Descriptive  #
#################
# How many duplicated cows?
height(df.two_duplicateparity)
#################
#  Descriptive  #
#################
# How many duplicated cows?
row(df.two_duplicateparity)
# Exculde cows without CalvingDate
df.three <- df.three[!is.na(df.three$CalvingDate), ] #5186 obs
# Exclude rows that have been culled within 150 DIM
df.three <- df.three[-which(df.three$cull.calving < 150), ] #4926 obs
# Exclude cows without DFC_CLA
df.three <- df.three[!is.na(df.three$DFC_CLA), ] #4861 obs
# Exclude cows with DFC_CLA less than 20 and more than 200
df.three <- df.three[-which(df.three$DFC_CLA < 20 | df.three$DFC_CLA > 200), ] #4799 obs
# Exclude cows DaysToFirstIns <20 DIM and >250 DIM
df.three <- df.three[-which(df.three$DaysToFirstIns < 20 | df.three$DaysToFirstIns >250), ] #4784 obs
### Exclude cows DFCFirstHeat <20 DIM and >200 DIM
df.three <- df.three[-which(df.three$DFCFirstHeat < 20 | df.three$DFCFirstHeat > 200), ] #4779 obs
#################
#  Descriptive  #
#################
# How many duplicated cows?
nrow(df.two_duplicateparity)/2
#################################
#  Merge ketosis, reproduction  #
#################################
df.two <- merge(reproduction, ketosis,
by = c('FarmNo', 'CowId', 'Lactation'),
all.x = TRUE, all.y = TRUE, sort = F) %>%
#5230 obs of 50 variables
distinct(FarmNo, CowId, Lactation, CalvingDate, .keep_all = T) #5173 obs
summary(df.two)
df.two$CalvingDate <- as.Date(df.two$CalvingDate)
# Check if there are duplicated cows -> 60 duplicated cows
df.two$farmcow <- paste(df.two$FarmNo, df.two$CowId, sep="")
df.two_parity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) #120 obs of 52 variables
###########################################
#  Merge ketosis, reproduction, and milk  #
###########################################
df.three <- merge(df.two, milk, by = c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'), all.x = TRUE, all.y = TRUE, sort = F) #5173 obs of 64 variables
summary(df.three)
# Exculde cows without CalvingDate
df.three <- df.three[!is.na(df.three$CalvingDate), ] #5129 obs
# Exclude rows that have been culled within 150 DIM
df.three <- df.three[-which(df.three$cull.calving < 150), ] #4871 obs
summary(df.three)
# Exclude cows without DFC_CLA
df.three <- df.three[!is.na(df.three$DFC_CLA), ] #4809 obs
# Exclude cows with DFC_CLA less than 20 and more than 200
df.three <- df.three[-which(df.three$DFC_CLA < 20 | df.three$DFC_CLA > 200), ] #4747 obs
# Exclude cows DaysToFirstIns <20 DIM and >250 DIM
df.three <- df.three[-which(df.three$DaysToFirstIns < 20 | df.three$DaysToFirstIns >250), ] #4732 obs
### Exclude cows DFCFirstHeat <20 DIM and >200 DIM
df.three <- df.three[-which(df.three$DFCFirstHeat < 20 | df.three$DFCFirstHeat > 200), ] #4727 obs
summary(df.three)
View(df.two_parity)
# Check if reproduction data and ketosis are in the same parity
df.two_parity$MedianSampleTime.x <- as.Date(df.two_parity$MedianSampleTime.x)
df.two_parity_timecheck <- df.two_parity %>%
mutate(sample.calving = difftime(MedianSampleTime.x, CalvingDate, units="days"))
View(df.two_parity_timecheck)
df.two_parity_timecheck <- df.two_parity %>%
select(FarmNo, CowId, Lactation, CalvingDate, MedianSampleTime.x, farmcow.dup) %>%
mutate(sample.calving = difftime(MedianSampleTime.x, CalvingDate, units="days"))
df.two_parity_timecheck <- df.two_parity %>%
select(FarmNo, CowId, Lactation, CalvingDate, MedianSampleTime.x, farmcow.dup) %>%
mutate(sample.calving = difftime(MedianSampleTime.x, CalvingDate, units="days"))
View(df.two_parity_timecheck)
View(df.two_parity_timecheck)
df.three_paritycheck <- merge(df.three, df.two_parity_timecheck,
by=c(FarmNo, CowId, Lactation, CalvingDate, MedianSampleTime.x, farmcow.dup), all.x = TRUE, sort = F)
df.three_paritycheck <- merge(df.three, df.two_parity_timecheck,
by=c('FarmNo', 'CowId', 'Lactation',
'CalvingDate', 'MedianSampleTime.x',
'farmcow.dup'), all.x = TRUE, sort = F)
df.three_paritycheck <- merge(df.three, df.two_parity_timecheck,
by = c('FarmNo', 'CowId', 'Lactation',
'CalvingDate', 'MedianSampleTime.x'),
all.x = TRUE, sort = F)
View(df.three_paritycheck)
df.three_paritycheck <- merge(df.three, df.two_parity_timecheck,
by = c('FarmNo', 'CowId', 'Lactation',
'CalvingDate', 'MedianSampleTime.x'),
all.x = TRUE, sort = F)
View(df.three_paritycheck)
View(df.three)
df.three_paritycheck <- merge(df.three, df.two_parity_timecheck,
by = c('FarmNo', 'CowId', 'Lactation',
'CalvingDate', 'MedianSampleTime.x'),
all.x = TRUE)
summary(df.three_paritycheck$sample.calving)
summary(as.character(df.three_paritycheck$sample.calving))
summary(as.numeric(df.three_paritycheck$sample.calving))
df.two_parity_timecheck$sample.calving <- as.numeric(df.two_parity_timecheck$sample.calving)
df.three_paritycheck <- merge(df.three, df.two_parity_timecheck,
by = c('FarmNo', 'CowId', 'Lactation',
'CalvingDate', 'MedianSampleTime.x'),
all.x = TRUE)
summary(df.three_paritycheck$sample.calving)
View(df.two_parity_timecheck)
df.two_parity <- df.two_parity %>%
select(FarmNo, CowId, Lactation, CalvingDate, MedianSampleTime.x, farmcow.dup) %>%
mutate(sample.calving = difftime(MedianSampleTime.x, CalvingDate, units="days")) # Only 4 cows did not have info for one of the parities -> remove these 4 records
rm(df.three_onelactation)
rm(df.three_paritycheck)
rm(df.two_parity_timecheck)
rm(df.two_duplicateparity)
df.two_parity <- df.two_parity[!is.na(df.two_parity$sample.calving), ]
#################################
#  Merge ketosis, reproduction  #
#################################
df.two <- merge(reproduction, ketosis,
by = c('FarmNo', 'CowId', 'Lactation'),
all.x = TRUE, all.y = TRUE, sort = F) %>%
#5230 obs of 50 variables
distinct(FarmNo, CowId, Lactation, CalvingDate, .keep_all = T) #5173 obs
summary(df.two)
df.two$CalvingDate <- as.Date(df.two$CalvingDate)
# Check if there are duplicated cows -> 60 duplicated cows
df.two$farmcow <- paste(df.two$FarmNo, df.two$CowId, sep="")
# Select cows with 2 parities
df.two_parity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) #120 obs of 52 variables
###########################################
#  Merge ketosis, reproduction, and milk  #
###########################################
df.three <- merge(df.two, milk, by = c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'), all.x = TRUE, all.y = TRUE, sort = F) #5173 obs of 64 variables
summary(df.three)
# Exculde cows without CalvingDate
df.three <- df.three[!is.na(df.three$CalvingDate), ] #5129 obs
# Exclude rows that have been culled within 150 DIM
df.three <- df.three[-which(df.three$cull.calving < 150), ] #4871 obs
summary(df.three)
# Exclude cows without DFC_CLA
df.three <- df.three[!is.na(df.three$DFC_CLA), ] #4809 obs
# Exclude cows with DFC_CLA less than 20 and more than 200
df.three <- df.three[-which(df.three$DFC_CLA < 20 | df.three$DFC_CLA > 200), ] #4747 obs
# Exclude cows DaysToFirstIns <20 DIM and >250 DIM
df.three <- df.three[-which(df.three$DaysToFirstIns < 20 | df.three$DaysToFirstIns >250), ] #4732 obs
### Exclude cows DFCFirstHeat <20 DIM and >200 DIM
df.three <- df.three[-which(df.three$DFCFirstHeat < 20 | df.three$DFCFirstHeat > 200), ] #4727 obs
summary(df.three)
# Check if reproduction data and ketosis are in the same parity
df.two_parity$MedianSampleTime.x <- as.Date(df.two_parity$MedianSampleTime.x)
df.two_parity <- df.two_parity %>%
select(FarmNo, CowId, Lactation, CalvingDate, MedianSampleTime.x, farmcow.dup) %>%
mutate(sample.calving = difftime(MedianSampleTime.x, CalvingDate, units="days")) # Only 4 cows did not have info for one of the parities -> remove these 4 records
View(df.two_parity)
df.two_parity <- df.two_parity[-which(df.two_parity$CowId == 1813), ] obs
df.two_parity <- df.two_parity[-which(df.two_parity$CowId == 1813), ] #obs
df.two_parity <- df.two_parity[-which(df.two_parity$FarmNo == 1002& df.two_parity$CowId == 1817), ]
df.two_parity <- df.two_parity[-which(df.two_parity$FarmNo == 1010& df.two_parity$CowId == 179), ]
df.two_parity <- df.two_parity[-which(df.two_parity$FarmNo == 1025& df.two_parity$CowId == 197), ]
#################
#  Descriptive  #
#################
# How many duplicated cows? -> 56 cows
nrow(df.two_parity)/2
df.two <- df.two[-which(df.two$FarmNo == 1002 & CowNo == 1813), ]
df.two <- df.two[-which(df.two$FarmNo == 1002 & df.two$CowNo == 1813 & is.na(df.two MedianSampleTime.x)), ]
df.two <- df.two[-which(df.two$FarmNo == 1002 & df.two$CowNo == 1813 & is.na(df.two$MedianSampleTime.x)), ]
#################################
#  Merge ketosis, reproduction  #
#################################
df.two <- merge(reproduction, ketosis,
by = c('FarmNo', 'CowId', 'Lactation'),
all.x = TRUE, all.y = TRUE, sort = F) %>%
#5230 obs of 50 variables
distinct(FarmNo, CowId, Lactation, CalvingDate, .keep_all = T) #5173 obs
summary(df.two)
df.two$CalvingDate <- as.Date(df.two$CalvingDate)
# Check if there are duplicated cows -> 60 duplicated cows
df.two$farmcow <- paste(df.two$FarmNo, df.two$CowId, sep="")
# Select cows with 2 parities
df.two_parity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) #120 obs of 52 variables
# Check if reproduction data and ketosis are in the same parity
df.two_parity$MedianSampleTime.x <- as.Date(df.two_parity$MedianSampleTime.x)
df.two_parity <- df.two_parity %>%
select(FarmNo, CowId, Lactation, CalvingDate, MedianSampleTime.x, farmcow.dup) %>%
mutate(sample.calving = difftime(MedianSampleTime.x, CalvingDate, units="days")) # Only 4 cows did not have info for one of the parities -> remove these 4 records
# Farm1002, cow 1813
# Farm1002, cow 1817
# Farm1010, cow 179
# Farm1025, cow 197
df.two_parity <- df.two_parity[-which(df.two_parity$CowId == 1813), ]
df.two_parity <- df.two_parity[-which(df.two_parity$FarmNo == 1002& df.two_parity$CowId == 1817), ]
df.two_parity <- df.two_parity[-which(df.two_parity$FarmNo == 1010& df.two_parity$CowId == 179), ]
df.two_parity <- df.two_parity[-which(df.two_parity$FarmNo == 1025& df.two_parity$CowId == 197), ]
#112 obs 7 variables
#df.two <- df.two[-which(df.two$FarmNo == 1002 & df.two$CowNo == 1813 & is.na(df.two$MedianSampleTime.x)), ]
df.two <- df.two[-which(df.two$FarmNo == 1002&df.two$CowNo == 1813&is.na(df.two$MedianSampleTime.x)), ]
#################################
#  Merge ketosis, reproduction  #
#################################
df.two <- merge(reproduction, ketosis,
by = c('FarmNo', 'CowId', 'Lactation'),
all.x = TRUE, all.y = TRUE, sort = F) %>%
#5230 obs of 50 variables
distinct(FarmNo, CowId, Lactation, CalvingDate, .keep_all = T) #5173 obs
summary(df.two)
df.two$CalvingDate <- as.Date(df.two$CalvingDate)
# Check if there are duplicated cows -> 60 duplicated cows
df.two$farmcow <- paste(df.two$FarmNo, df.two$CowId, sep="")
# Select cows with 2 parities
df.two_parity <- df.two %>%
mutate(farmcow.dup = ifelse(duplicated(farmcow)|
duplicated(farmcow,
fromLast=TRUE), 1, 0)) %>%
filter(farmcow.dup == 1) #120 obs of 52 variables
# Check if reproduction data and ketosis are in the same parity
df.two_parity$MedianSampleTime.x <- as.Date(df.two_parity$MedianSampleTime.x)
df.two_parity <- df.two_parity %>%
select(FarmNo, CowId, Lactation, CalvingDate, MedianSampleTime.x, farmcow.dup) %>%
mutate(sample.calving = difftime(MedianSampleTime.x, CalvingDate, units="days")) # Only 4 cows did not have info for one of the parities -> remove these 4 records
# Farm1002, cow 1813
# Farm1002, cow 1817
# Farm1010, cow 179
# Farm1025, cow 197
df.two_parity <- df.two_parity[-which(df.two_parity$CowId == 1813), ]
df.two_parity <- df.two_parity[-which(df.two_parity$FarmNo == 1002& df.two_parity$CowId == 1817), ]
df.two_parity <- df.two_parity[-which(df.two_parity$FarmNo == 1010& df.two_parity$CowId == 179), ]
df.two_parity <- df.two_parity[-which(df.two_parity$FarmNo == 1025& df.two_parity$CowId == 197), ]
#112 obs 7 variables
#df.two <- df.two[-which(df.two$FarmNo == 1002&df.two$CowNo == 1813&is.na(df.two$MedianSampleTime.x)), ]
View(df.two)
#112 obs 7 variables
df.two$MedianSampleTime.x <- as.Date(df.two$MedianSampleTime.x)
###########################################
#  Merge ketosis, reproduction, and milk  #
###########################################
df.three <- merge(df.two, milk, by = c('FarmNo', 'CowId', 'Lactation', 'CalvingDate'), all.x = TRUE, all.y = TRUE, sort = F) #5173 obs of 64 variables
df.three <- df.three[-which(df.three$FarmNo == 1002 & df.three$CowId == 1813 & is.na(df.three$MedianSampleTime.x)), ]
df.three <- df.three[-which(df.three$FarmNo == 1002 & df.three$CowId == 1817 & is.na(df.three$MedianSampleTime.x)), ]
df.three <- df.three[-which(df.three$FarmNo == 1010 & df.three$CowId == 179 & is.na(df.three$MedianSampleTime.x)), ]
df.three <- df.three[-which(df.three$FarmNo == 1025 & df.three$CowId == 197 & is.na(df.three$MedianSampleTime.x)), ]
# Exculde cows without CalvingDate
df.three <- df.three[!is.na(df.three$CalvingDate), ] #5129 obs
# Exclude rows that have been culled within 150 DIM
df.three <- df.three[-which(df.three$cull.calving < 150), ] #4871 obs
# Exclude cows without DFC_CLA
df.three <- df.three[!is.na(df.three$DFC_CLA), ] #4809 obs
# Exclude cows with DFC_CLA less than 20 and more than 200
df.three <- df.three[-which(df.three$DFC_CLA < 20 | df.three$DFC_CLA > 200), ] #4747 obs
# Exclude cows DaysToFirstIns <20 DIM and >250 DIM
df.three <- df.three[-which(df.three$DaysToFirstIns < 20 | df.three$DaysToFirstIns >250), ] #4732 obs
### Exclude cows DFCFirstHeat <20 DIM and >200 DIM
df.three <- df.three[-which(df.three$DFCFirstHeat < 20 | df.three$DFCFirstHeat > 200), ] #4727 obs
#################
#  Descriptive  #
#################
Three <- df.three
TWoParity <- df.two_parity
#################
#  Descriptive  #
#################
Three <- df.three
TWoParity <- df.two_parity
rm(list = ls(pattern = "df"))
rm(ketosis)
rm(milk)
rm(list = ls(pattern = "all_"))
