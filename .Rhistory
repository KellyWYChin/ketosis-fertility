hist(mean.diff.B)
dat <- data.frame(
id = 1:20,
gene_4839 = c(9.19, 5.15,  6.06,  9.72,  6.50, 11.53,  7.09, 6.19, 10.02, 7.36, 12.02,  7.92,  8.12, 10.29,  9.28, 11.26, 11.04, 11.33,  9.32, 10.07),
group = c("CP", "CP", "CP", "CP", "CP", "CP", "CP", "CP", "CP", "CP", "HC", "HC", "HC", "HC", "HC", "HC", "HC", "HC", "HC", "HC")
)
gene.cp <- dat[dat$group=="CP",]$gene_4839
gene.hc <- dat[dat$group=="HC",]$gene_4839
gene.cp
gene.hc
n1 <- length(gene.hc)
n2 <- length(gene.cp)
B <- 1000
mean.diff.B <- numeric(B)
mean.diff.gene <- mean(gene.hc) - mean(gene.cp)
for (b in 1:B){
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean.diff.B[b] <- mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
bias <- mean(mean.diff.B) - mean.diff.gene
bias
se <- sd(mean.diff.B)
print(list(est=mean.diff.gene, bias=bias, s.e.=se,q=bias/se))
hist(mean.diff.B)
gene.cp <- dat[dat$group=="CP",]$gene_4839
gene.hc <- dat[dat$group=="HC",]$gene_4839
gene.cp
gene.hc
n1 <- length(gene.hc)
n2 <- length(gene.cp)
B <- 1000
mean.diff.B <- numeric(B)
mean.diff.gene <- mean(gene.hc) - mean(gene.cp)
for (b in 1:B){
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean.diff.B[b] <- mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
bias <- mean(mean.diff.B) - mean.diff.gene
bias
se <- sd(mean.diff.B)
print(list(est=mean.diff.gene, bias=bias, s.e.=se,q=bias/se))
hist(mean.diff.B)
gene.cp <- dat[dat$group=="CP",]$gene_4839
gene.hc <- dat[dat$group=="HC",]$gene_4839
gene.cp
gene.hc
n1 <- length(gene.hc)
n2 <- length(gene.cp)
B <- 1000
mean.diff.B <- numeric(B)
mean.diff.gene <- mean(gene.hc) - mean(gene.cp)
for (b in 1:B){
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean.diff.B[b] <- mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
bias <- mean(mean.diff.B) - mean.diff.gene
bias
se <- sd(mean.diff.B)
print(list(est=mean.diff.gene, bias=bias, s.e.=se,q=bias/se))
hist(mean.diff.B)
gene.cp <- dat[dat$group=="CP",]$gene_4839
gene.hc <- dat[dat$group=="HC",]$gene_4839
gene.cp
gene.hc
n1 <- length(gene.hc)
n2 <- length(gene.cp)
B <- 1000
mean.diff.B <- numeric(B)
mean.diff.gene <- mean(gene.hc) - mean(gene.cp)
for (b in 1:B){
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean.diff.B[b] <- mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
bias <- mean(mean.diff.B) - mean.diff.gene
bias
se <- sd(mean.diff.B)
print(list(est=mean.diff.gene, bias=bias, s.e.=se,q=bias/se))
hist(mean.diff.B)
mean.diff <- function(x, i, j){
gene.cp <- x[x$group=="CP",]$gene_4839
gene.hc <- x[x$group=="HC",]$gene_4839
n1 <- length(gene.hc)
n2 <- length(gene.cp)
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
obj.mean.diff <- boot(data = dat, statistic = mean.diff, R=1000)
obj.mean.diff
hist(obj.mean.diff$t)
boot.ci(obj.mean.diff, type= "all")
mean.diff.test <- function(x, i, j){
i <- sample(1:10, size = 1, replace = TRUE)
j <- sample(1:10, size = 1, replace = TRUE)
mean(x$gene_4839[x$group == "HC"][i] - x$gene_4839[x$group == "CP"][j])
}
obj.mean.diff.test <- boot(data = dat, statistic = mean.diff.test, R=1000)
obj.mean.diff.test
hist(obj.mean.diff.test$t)
boot.ci(obj.mean.diff.test, type = "all")
mean.diff <- function(x, i, j){
gene.cp <- x[x$group=="CP",]$gene_4839
gene.hc <- x[x$group=="HC",]$gene_4839
n1 <- length(gene.hc)
n2 <- length(gene.cp)
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
obj.mean.diff <- boot(data = dat, statistic = mean.diff, R=1000)
obj.mean.diff
hist(obj.mean.diff$t)
boot.ci(obj.mean.diff, type= "all")
mean.diff.test <- function(x, i, j){
i <- sample(1:10, size = 10, replace = TRUE)
j <- sample(1:10, size = 10, replace = TRUE)
mean(x$gene_4839[x$group == "HC"][i] - x$gene_4839[x$group == "CP"][j])
}
obj.mean.diff.test <- boot(data = dat, statistic = mean.diff.test, R=1000)
obj.mean.diff.test
hist(obj.mean.diff.test$t)
boot.ci(obj.mean.diff.test, type = "all")
mean.diff <- function(x, i, j){
gene.cp <- x[x$group=="CP",]$gene_4839
gene.hc <- x[x$group=="HC",]$gene_4839
n1 <- length(gene.hc)
n2 <- length(gene.cp)
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
obj.mean.diff <- boot(data = dat, statistic = mean.diff, R=1000)
obj.mean.diff
hist(obj.mean.diff$t)
boot.ci(obj.mean.diff, type= "all")
mean.diff.test <- function(x, i, j){
i <- sample(1:10, size = 10, replace = TRUE)
j <- sample(1:10, size = 10, replace = TRUE)
mean(x$gene_4839[x$group == "HC"][i] - x$gene_4839[x$group == "CP"][j])
}
obj.mean.diff.test <- boot(data = dat, statistic = mean.diff.test, R=1000)
obj.mean.diff.test
hist(obj.mean.diff.test$t)
boot.ci(obj.mean.diff.test, type = "all")
mean.diff <- function(x, i, j){
gene.cp <- x[x$group=="CP",]$gene_4839
gene.hc <- x[x$group=="HC",]$gene_4839
n1 <- length(gene.hc)
n2 <- length(gene.cp)
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
obj.mean.diff <- boot(data = dat, statistic = mean.diff, R=1000)
obj.mean.diff
hist(obj.mean.diff$t)
boot.ci(obj.mean.diff, type= "all")
mean.diff.test <- function(x, i, j){
i <- sample(1:10, size = 10, replace = TRUE)
j <- sample(1:10, size = 10, replace = TRUE)
mean(x$gene_4839[x$group == "HC"][i] - x$gene_4839[x$group == "CP"][j])
}
obj.mean.diff.test <- boot(data = dat, statistic = mean.diff.test, R=1000)
obj.mean.diff.test
hist(obj.mean.diff.test$t)
boot.ci(obj.mean.diff.test, type = "all")
mean.diff <- function(x, i, j){
gene.cp <- x[x$group=="CP",]$gene_4839
gene.hc <- x[x$group=="HC",]$gene_4839
n1 <- length(gene.hc)
n2 <- length(gene.cp)
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
obj.mean.diff <- boot(data = dat, statistic = mean.diff, R=1000)
obj.mean.diff
hist(obj.mean.diff$t)
boot.ci(obj.mean.diff, type= "all")
mean.diff.test <- function(x, i, j){
i <- sample(1:10, size = 10, replace = TRUE)
j <- sample(1:10, size = 10, replace = TRUE)
mean(x$gene_4839[x$group == "HC"][i] - x$gene_4839[x$group == "CP"][j])
}
obj.mean.diff.test <- boot(data = dat, statistic = mean.diff.test, R=1000)
obj.mean.diff.test
hist(obj.mean.diff.test$t)
boot.ci(obj.mean.diff.test, type = "all")
# standard t-test
t0 <- t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$statistic
t0
# standard t-test
t0 <- t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$statistic
t0
z <- c(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])  # make one vector, containing both groups
R <- 1000                    # R is the number of permutations
reps <- numeric(R)           # reps contains the resulting t-statistics obtained from the premutation
K <- length(z)               # K is the length of the vector z, the total number of women
# Example 8.1a from Dalgaard 1.2.14:
# p-value of the t-statistic without assuming any distribution
exp.lean <- c(7.53,7.48,8.08,8.09,10.15,8.40,10.88,6.13,7.90,7.05,7.48,7.58,8.11)  # n=13
exp.obese <- c(9.21,11.51,12.79,11.85,9.97,8.79,9.69,9.68,9.19)	# n=9
# standard t-test
t0 <- t.test(exp.lean, exp.obese)$statistic
z <- c(exp.lean, exp.obese)  # make one vector, containing both groups
reps <- numeric(R)           # reps contains the resulting t-statistics obtained from the premutation
K <- length(z)               # K is the length of the vector z, the total number of women
# standard t-test
t0 <- t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$statistic
t0
z <- c(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])  # make one vector, containing both groups
R <- 1000                    # R is the number of permutations
reps <- numeric(R)           # reps contains the resulting t-statistics obtained from the premutation
K <- length(z)               # K is the length of the vector z, the total number of women
t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])
t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$p.value	# p-value  from  t-test for comparison
ks.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"], exact = F)$p.value
boxplot(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])
# standard t-test
t0 <- t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$statistic
t0
z <- c(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])  # make one vector, containing both groups
R <- 1000                    # R is the number of permutations
reps <- numeric(R)           # reps contains the resulting t-statistics obtained from the premutation
K <- length(z)               # K is the length of the vector z, the total number of women
## here fill in the code to:
# -do the R permutations, compute the t statistic of comparing the permuted lean with obese and store the t-statistic on each permutation in reps
?sample
for (i in 1:R) {
k <- sample(K, size = 10, replace = FALSE)
x1 <- z[k]
y1 <- z[-k]
reps[i] <- t.test(x1, y1)$statistic
}
hist(reps)
# - determine the lower one sided p value
(1 + sum(reps <= t0))/(R+1)
# OR
mean(c(t0, reps) <= t0)
# - determine the two sided p value
(1 + sum(abs(reps)>=abs(t0)))/(R+1)
mean(c(abs(t0), abs(reps)) >= abs(t0))
t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$p.value	# p-value  from  t-test for comparison
ks.test(x1, y1, exact = F)$p.value
ks.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"], exact = F)$p.value
boxplot(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])
# standard t-test
t0 <- t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$statistic
t0
z <- c(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])  # make one vector, containing both groups
R <- 1000                    # R is the number of permutations
reps <- numeric(R)           # reps contains the resulting t-statistics obtained from the premutation
K <- length(z)               # K is the length of the vector z, the total number of women
## here fill in the code to:
# -do the R permutations, compute the t statistic of comparing the permuted lean with obese and store the t-statistic on each permutation in reps
?sample
for (i in 1:R) {
k <- sample(K, size = 10, replace = FALSE)
x1 <- z[k]
y1 <- z[-k]
reps[i] <- t.test(x1, y1)$statistic
}
hist(reps)
# - determine the lower one sided p value
(1 + sum(reps <= t0))/(R+1)
# OR
mean(c(t0, reps) <= t0)
# - determine the two sided p value
(1 + sum(abs(reps)>=abs(t0)))/(R+1)
mean(c(abs(t0), abs(reps)) >= abs(t0))
t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$p.value	# p-value  from  t-test for comparison
ks.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"], exact = F)$p.value
boxplot(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])
for (i in 1:R) {
k <- sample(K, size = 10, replace = FALSE)
x1 <- z[k]
y1 <- z[-k]
reps[i] <- t.test(x1, y1)$statistic
}
# - determine the lower one sided p value
(1 + sum(reps <= t0))/(R+1)
# OR
mean(c(t0, reps) <= t0)
# - determine the two sided p value
(1 + sum(abs(reps)>=abs(t0)))/(R+1)
mean(c(abs(t0), abs(reps)) >= abs(t0))
# standard t-test
t0 <- t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$statistic
t0
z <- c(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])  # make one vector, containing both groups
R <- 1000                    # R is the number of permutations
reps <- numeric(R)           # reps contains the resulting t-statistics obtained from the premutation
K <- length(z)               # K is the length of the vector z, the total number of women
## here fill in the code to:
# -do the R permutations, compute the t statistic of comparing the permuted lean with obese and store the t-statistic on each permutation in reps
?sample
for (i in 1:R) {
k <- sample(K, size = 10, replace = FALSE)
x1 <- z[k]
y1 <- z[-k]
reps[i] <- t.test(x1, y1)$statistic
}
hist(reps)
# - determine the lower one sided p value
(1 + sum(reps <= t0))/(R+1)
# OR
mean(c(t0, reps) <= t0)
# - determine the two sided p value
(1 + sum(abs(reps)>=abs(t0)))/(R+1)
mean(c(abs(t0), abs(reps)) >= abs(t0))
t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$p.value	# p-value  from  t-test for comparison
ks.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"], exact = F)$p.value
boxplot(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])
# standard t-test
t0 <- t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$statistic
t0
z <- c(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])  # make one vector, containing both groups
R <- 999                    # R is the number of permutations
reps <- numeric(R)           # reps contains the resulting t-statistics obtained from the premutation
K <- length(z)               # K is the length of the vector z, the total number of women
## here fill in the code to:
# -do the R permutations, compute the t statistic of comparing the permuted lean with obese and store the t-statistic on each permutation in reps
?sample
for (i in 1:R) {
k <- sample(K, size = 10, replace = FALSE)
x1 <- z[k]
y1 <- z[-k]
reps[i] <- t.test(x1, y1)$statistic
}
hist(reps)
# - determine the lower one sided p value
(1 + sum(reps <= t0))/(R+1)
# OR
mean(c(t0, reps) <= t0)
# - determine the two sided p value
(1 + sum(abs(reps)>=abs(t0)))/(R+1)
mean(c(abs(t0), abs(reps)) >= abs(t0))
t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$p.value	# p-value  from  t-test for comparison
ks.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"], exact = F)$p.value
boxplot(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])
library(dplyr)
dat$gene_4839 <- as.numeric(dat$gene_4839)
mean(dat$gene_4839[dat$group == "CP"])
mean(dat$gene_4839[dat$group == "HC"])
mean.diff <- mean(dat$gene_4839[dat$group == "HC"] - dat$gene_4839[dat$group == "CP"])
mean.diff
gene.cp <- dat[dat$group=="CP",]$gene_4839
gene.hc <- dat[dat$group=="HC",]$gene_4839
gene.cp
gene.hc
n1 <- length(gene.hc)
n2 <- length(gene.cp)
B <- 1000
mean.diff.B <- numeric(B)
mean.diff.gene <- mean(gene.hc) - mean(gene.cp)
for (b in 1:B){
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean.diff.B[b] <- mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
bias <- mean(mean.diff.B) - mean.diff.gene
bias
se <- sd(mean.diff.B)
print(list(est=mean.diff.gene, bias=bias, s.e.=se,q=bias/se))
hist(mean.diff.B)
mean.diff <- function(x, i, j){
gene.cp <- x[x$group=="CP",]$gene_4839
gene.hc <- x[x$group=="HC",]$gene_4839
n1 <- length(gene.hc)
n2 <- length(gene.cp)
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
obj.mean.diff <- boot(data = dat, statistic = mean.diff, R=1000)
obj.mean.diff
hist(obj.mean.diff$t)
boot.ci(obj.mean.diff, type= "all")
mean.diff.test <- function(x, i, j){
i <- sample(1:10, size = 10, replace = TRUE)
j <- sample(1:10, size = 10, replace = TRUE)
mean(x$gene_4839[x$group == "HC"][i] - x$gene_4839[x$group == "CP"][j])
}
obj.mean.diff.test <- boot(data = dat, statistic = mean.diff.test, R=1000)
obj.mean.diff.test
hist(obj.mean.diff.test$t)
boot.ci(obj.mean.diff.test, type = "all")
mean.diff <- function(x, i, j){
gene.cp <- x[x$group=="CP",]$gene_4839
gene.hc <- x[x$group=="HC",]$gene_4839
n1 <- length(gene.hc)
n2 <- length(gene.cp)
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
obj.mean.diff <- boot(data = dat, statistic = mean.diff, R=1000)
obj.mean.diff
hist(obj.mean.diff$t)
boot.ci(obj.mean.diff, type= "all")
mean.diff.test <- function(x, i, j){
i <- sample(1:10, size = 10, replace = TRUE)
j <- sample(1:10, size = 10, replace = TRUE)
mean(x$gene_4839[x$group == "HC"][i] - x$gene_4839[x$group == "CP"][j])
}
obj.mean.diff.test <- boot(data = dat, statistic = mean.diff.test, R=1000)
obj.mean.diff.test
hist(obj.mean.diff.test$t)
boot.ci(obj.mean.diff.test, type = "all")
mean.diff <- function(x, i, j){
gene.cp <- x[x$group=="CP",]$gene_4839
gene.hc <- x[x$group=="HC",]$gene_4839
n1 <- length(gene.hc)
n2 <- length(gene.cp)
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
obj.mean.diff <- boot(data = dat, statistic = mean.diff, R=1000)
obj.mean.diff
hist(obj.mean.diff$t)
boot.ci(obj.mean.diff, type= "all")
mean.diff.test <- function(x, i, j){
i <- sample(1:10, size = 10, replace = TRUE)
j <- sample(1:10, size = 10, replace = TRUE)
mean(x$gene_4839[x$group == "HC"][i] - x$gene_4839[x$group == "CP"][j])
}
obj.mean.diff.test <- boot(data = dat, statistic = mean.diff.test, R=1000)
obj.mean.diff.test
hist(obj.mean.diff.test$t)
boot.ci(obj.mean.diff.test, type = "all")
mean.diff <- function(x, i, j){
gene.cp <- x[x$group=="CP",]$gene_4839
gene.hc <- x[x$group=="HC",]$gene_4839
n1 <- length(gene.hc)
n2 <- length(gene.cp)
i <- sample(1:n1, size=n1, replace=TRUE)  # sampling gene.hc
btotal.gene.hc <- gene.hc[i]
j <- sample(1:n2, size=n2, replace=TRUE)  # sampling gene.cp
btotal.gene.cp <- gene.cp[j]
mean(btotal.gene.hc) - mean(btotal.gene.cp)
}
obj.mean.diff <- boot(data = dat, statistic = mean.diff, R=1000)
obj.mean.diff
hist(obj.mean.diff$t)
boot.ci(obj.mean.diff, type= "all")
mean.diff.test <- function(x, i, j){
i <- sample(1:10, size = 10, replace = TRUE)
j <- sample(1:10, size = 10, replace = TRUE)
mean(x$gene_4839[x$group == "HC"][i] - x$gene_4839[x$group == "CP"][j])
}
obj.mean.diff.test <- boot(data = dat, statistic = mean.diff.test, R=1000)
obj.mean.diff.test
hist(obj.mean.diff.test$t)
boot.ci(obj.mean.diff.test, type = "all")
# standard t-test
t0 <- t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$statistic
t0
z <- c(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])  # make one vector, containing both groups
R <- 999                    # R is the number of permutations
reps <- numeric(R)           # reps contains the resulting t-statistics obtained from the premutation
K <- length(z)               # K is the length of the vector z, the total number of women
## here fill in the code to:
# -do the R permutations, compute the t statistic of comparing the permuted lean with obese and store the t-statistic on each permutation in reps
?sample
for (i in 1:R) {
k <- sample(K, size = 10, replace = FALSE)
x1 <- z[k]
y1 <- z[-k]
reps[i] <- t.test(x1, y1)$statistic
}
hist(reps)
# - determine the lower one sided p value
(1 + sum(reps <= t0))/(R+1)
# OR
mean(c(t0, reps) <= t0)
# - determine the two sided p value
(1 + sum(abs(reps)>=abs(t0)))/(R+1)
mean(c(abs(t0), abs(reps)) >= abs(t0))
t.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])$p.value	# p-value  from  t-test for comparison
ks.test(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"], exact = F)$p.value
boxplot(dat$gene_4839[dat$group == "HC"], dat$gene_4839[dat$group == "CP"])
